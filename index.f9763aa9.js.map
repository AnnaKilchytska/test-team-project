{"mappings":"AAAA,MAIMA,EAAWC,SAASC,cAAc,eAExCC,eAAeC,IACb,IACE,MAAMC,QAAaC,MAAM,4FACnBC,QAAmBF,EAAKG,QAGxBC,QAAEA,GAAYF,EACpB,OAAOE,C,CACP,MAAOC,GACPC,QAAQC,IAAIF,E,EAyChBN,IArCAD,iBACE,MAAME,QAAaC,MACjB,uFAEIC,QAAmBF,EAAKG,QACxBK,OAAEA,GAAWN,EACnBI,QAAQG,IAAID,GAEZ,MAAME,EAAe,GAAGF,EAAOG,kBAC7BH,EAAOI,cAAcJ,EAAOK,aAAaC,OAAS,KAEpDR,QAAQG,IAAIC,E,CA2BdK,GAwCAjB,iBACE,IACE,MAAMkB,QAAcjB,IACpBO,QAAQG,IAAIO,GACZ,MAAMC,EAbV,SAAqBC,GACnB,MAAMC,EAAiBD,EAAME,SAAQC,GAC5BA,EAAKC,YAERC,EAAS,IAAIC,IAAIL,GAEvB,OADmBM,MAAMC,KAAKH,E,CAQXI,CAAYX,GAC7BV,QAAQG,IAAI,YAAaQ,GACzB,MAAMM,QArEVzB,eAAyB8B,GACvB,MAAM5B,QAAaC,MACjB,0FAGI4B,QAAmB7B,EAAKG,QACxBoB,OAAEA,GAAWM,EACnBvB,QAAQG,IAAIc,GAEZ,IAAIO,EAAiB,GAUrB,OARAP,EAAOQ,QAAOV,IACZ,GAAIO,EAAII,SAASX,EAAKY,IAGpB,OAFA3B,QAAQG,IAAIY,EAAKa,MACjBJ,EAAeK,KAAKd,EAAKa,MAClBb,EAAKa,I,IAGhB5B,QAAQG,IAAIqB,GACLA,C,CAkDgBM,CAAUnB,GAC/BX,QAAQG,IAAI,SAAUc,GACtB,MAAMc,QA9CVvC,eAA4BE,EAAMuB,GAChCjB,QAAQG,IAAI,eAAgBT,GAI5B,MAAMU,EAAe,sCAqBrB,OApBAJ,QAAQG,IAAIC,GAKGV,EACZsC,KAAIjB,IACHf,QAAQG,IAAI,OAAQY,GAOb,uBACGX,IAAeW,EAAKkB,2BAC3BhB,sBAGJiB,KAAK,G,CAqBeC,CAAazB,EAAOO,GACzCjB,QAAQG,IAAIO,GACZV,QAAQG,IAAIO,EAAMM,WAGlB3B,EAAS+C,UAAYL,C,CACrB,MAAOhC,GACPC,QAAQC,IAAIF,E,EAIhBsC","sources":["src/index.js"],"sourcesContent":["const API_KEY = '5e62b2453973c629f1496ace3a4b7719';\n// const API_KEY = '60bdd84997c9f2a4c6cd2341c547ed98';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending/movie/day';\n\nconst cardList = document.querySelector('.cards-list');\n\nasync function fetchPopularFilms() {\n  try {\n    const data = await fetch(`${BASE_URL}?api_key=${API_KEY}`);\n    const parcedData = await data.json();\n    // console.log(films);\n    // console.log(films.results[0].genre_ids);\n    const { results } = parcedData;\n    return results;\n  } catch (error) {\n    console.dir(error);\n  }\n}\n\nasync function getImages() {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/configuration?api_key=${API_KEY}`\n  );\n  const parcedData = await data.json();\n  const { images } = parcedData;\n  console.log(images);\n\n  const imageBaseURL = `${images.secure_base_url}${\n    images.profile_sizes[images.poster_sizes.length - 1]\n  }`;\n  console.log(imageBaseURL);\n  return imageBaseURL;\n}\n\nasync function getGenres(ids) {\n  const data = await fetch(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n\n  const genresData = await data.json();\n  const { genres } = genresData;\n  console.log(genres);\n\n  let selectedGenres = [];\n\n  genres.filter(item => {\n    if (ids.includes(item.id)) {\n      console.log(item.name);\n      selectedGenres.push(item.name);\n      return item.name;\n    }\n  });\n  console.log(selectedGenres);\n  return selectedGenres;\n}\n\nfetchPopularFilms();\ngetImages();\n\nasync function createMarkup(data, genres) {\n  console.log('data results', data);\n  //   const imageBaseURL = await getImages();\n\n  // ПРОБА ПЕРА\n  const imageBaseURL = 'https://image.tmdb.org/t/p/original';\n  console.log(imageBaseURL);\n\n  //   const genreIDs = getGenreIDs(data);\n  //   console.log('genre ids', genreIDs);\n\n  const markup = data\n    .map(item => {\n      console.log('item', item);\n\n      //   const genres = getGenres(genreIDs).then(res => {\n      //     return res;\n      //   });\n      //   console.log('genres', genres);\n\n      return `<li>\n    <img src=\"${imageBaseURL}${item.poster_path}\" />\n    <p>${genres}</p>\n    </li>`;\n    })\n    .join('');\n  return markup;\n}\n\nfunction getGenreIDs(array) {\n  const repeatedGenres = array.flatMap(item => {\n    return item.genre_ids;\n  });\n  const genres = new Set(repeatedGenres);\n  const genreArray = Array.from(genres);\n  return genreArray;\n}\n\nasync function renderPopularFilms() {\n  try {\n    const films = await fetchPopularFilms();\n    console.log(films);\n    const genreIDs = getGenreIDs(films);\n    console.log('genre ids', genreIDs);\n    const genres = await getGenres(genreIDs);\n    console.log('genres', genres);\n    const markup = await createMarkup(films, genres);\n    console.log(films);\n    console.log(films.genre_ids);\n    // console.log(markup);\n\n    cardList.innerHTML = markup;\n  } catch (error) {\n    console.dir(error);\n  }\n}\n\nrenderPopularFilms();\n"],"names":["$1f0dc3b9307be026$var$cardList","document","querySelector","async","$1f0dc3b9307be026$var$fetchPopularFilms","data","fetch","parcedData","json","results","error","console","dir","images","log","imageBaseURL","secure_base_url","profile_sizes","poster_sizes","length","$1f0dc3b9307be026$var$getImages","films","genreIDs","array","repeatedGenres","flatMap","item","genre_ids","genres","Set","Array","from","$1f0dc3b9307be026$var$getGenreIDs","ids","genresData","selectedGenres","filter","includes","id","name","push","$1f0dc3b9307be026$var$getGenres","markup","map","poster_path","join","$1f0dc3b9307be026$var$createMarkup","innerHTML","$1f0dc3b9307be026$var$renderPopularFilms"],"version":3,"file":"index.f9763aa9.js.map"}